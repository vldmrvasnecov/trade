# notifier.py
import requests
import logging
from config import TELEGRAM_TOKEN, CHAT_ID, TELEGRAM_ENABLED

logger = logging.getLogger(__name__)

def send_telegram_message(text):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ Telegram API"""
    if not TELEGRAM_ENABLED:
        return False
    try:
        url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
        data = {
            'chat_id': CHAT_ID,
            'text': text,
            'parse_mode': 'Markdown'
        }
        response = requests.post(url, data=data, timeout=10)
        if response.status_code == 200:
            logger.info("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram")
            return True
        else:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {response.text}")
            return False
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ Telegram: {e}")
        return False

def send_telegram_alert_enhanced(combined_signal):
    if not TELEGRAM_ENABLED:
        return
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è —Å–∏–≥–Ω–∞–ª–æ–≤ —Å –≤—ã—Å–æ–∫–æ–π –∏ —Å—Ä–µ–¥–Ω–µ–π —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é
    if combined_signal['confidence'] in ['high', 'medium']:
        btc = combined_signal['btc']
        alt = combined_signal['alt']
        # –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å None
        btc_z = btc.get('z', 0) if btc else 0
        btc_rsi = btc.get('rsi', 50) if btc else 50
        btc_macd_hist = btc.get('macd_hist', 0) if btc else 0
        btc_trend = btc.get('trend', 'neutral').upper() if btc else 'N/A'
        btc_regime = btc.get('regime', 'N/A') if btc else 'N/A'
        btc_volatility = btc.get('volatility', 'N/A') if btc else 'N/A'
        alt_price = alt.get('price', 0) if alt else 0
        alt_rr = alt.get('rr') # –ú–æ–∂–µ—Ç –±—ã—Ç—å None
        alt_target = alt.get('target') # –ú–æ–∂–µ—Ç –±—ã—Ç—å None
        alt_stop = alt.get('stop') # –ú–æ–∂–µ—Ç –±—ã—Ç—å None
        alt_signal_name = alt.get('signal', 'N/A') if alt else 'N/A'
        alt_trend = alt.get('trend', 'neutral').upper() if alt else 'N/A'
        alt_regime = alt.get('regime', 'N/A') if alt else 'N/A'
        correlation = combined_signal.get('correlation', 0) if combined_signal else 0
        is_divergent = combined_signal.get('is_divergent', False) if combined_signal else False
        reason = combined_signal.get('reason', 'N/A') if combined_signal else 'N/A'
        # –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è Telegram —Å–æ–æ–±—â–µ–Ω–∏—è
        rr_str_tg = f"{alt_rr:.2f}" if alt_rr is not None else "N/A"
        target_str_tg = f"{alt_target:.8f}" if alt_target is not None else "N/A"
        stop_str_tg = f"{alt_stop:.8f}" if alt_stop is not None else "N/A"
        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        msg = f"""
üîî `{combined_signal['final_signal'] if combined_signal else 'N/A'}`
*–ú–æ–Ω–µ—Ç–∞:* `{alt['symbol'] if alt and alt.get('symbol') else 'N/A'}`
*–¶–µ–Ω–∞:* `{alt_price:.8f}`
üìä *–ö–æ–Ω—Ç–µ–∫—Å—Ç BTC:*
  ‚Ä¢ –¢—Ä–µ–Ω–¥: {btc_trend}
  ‚Ä¢ –†–µ–∂–∏–º: {btc_regime}
  ‚Ä¢ –í–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å: {btc_volatility}
  ‚Ä¢ Z-score: {btc_z:.2f}
  ‚Ä¢ RSI: {btc_rsi:.1f}
  ‚Ä¢ MACD: {btc_macd_hist:.3f}
üìà *–ê–Ω–∞–ª–∏–∑ –∞–ª—å—Ç–∫–æ–∏–Ω–∞:*
  ‚Ä¢ –°–∏–≥–Ω–∞–ª: {alt_signal_name}
  ‚Ä¢ –¢—Ä–µ–Ω–¥: {alt_trend}
  ‚Ä¢ –†–µ–∂–∏–º: {alt_regime}
  ‚Ä¢ R/R: `{rr_str_tg}`
üîó *–°–≤—è–∑—å —Å BTC:*
  ‚Ä¢ –ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è: `{correlation:.2f}`
  ‚Ä¢ –î–∏–≤–µ—Ä–≥–µ–Ω—Ü–∏—è: {'‚úÖ –î–∞' if is_divergent else '‚ùå –ù–µ—Ç'}
üí° *–ü—Ä–∏—á–∏–Ω–∞:* {reason}
üéØ *–¶–µ–ª—å:* `{target_str_tg}`  
üõë *–°—Ç–æ–ø:* `{stop_str_tg}`
        """
        send_telegram_message(msg)
    # --- –ò–∑–º–µ–Ω–µ–Ω–∏–µ 3: –û—Ç–¥–µ–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è ACCUMULATION ---
    elif combined_signal['alt']['signal'] == 'ACCUMULATION' and TELEGRAM_ENABLED:
        alt = combined_signal['alt']
        alt_price = alt.get('price', 0) if alt else 0
        alt_rr = alt.get('rr') # –ú–æ–∂–µ—Ç –±—ã—Ç—å None
        rr_str_tg = f"{alt_rr:.2f}" if alt_rr is not None else "N/A"
        msg = f"""
üîç *–ú–æ–Ω–µ—Ç–∞ –≤ —Ñ–∞–∑–µ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è* 
*–ú–æ–Ω–µ—Ç–∞:* `{alt['symbol'] if alt and alt.get('symbol') else 'N/A'}`
*–¶–µ–Ω–∞:* `{alt_price:.8f}`
üìà *–°–∏–≥–Ω–∞–ª:* ACCUMULATION
üìä *R/R:* `{rr_str_tg}`
üí° *–í–æ–∑–º–æ–∂–Ω–æ–µ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ –∫—Ä—É–ø–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤. –°–ª–µ–¥–∏—Ç–µ –∑–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º.*
        """
        send_telegram_message(msg)
